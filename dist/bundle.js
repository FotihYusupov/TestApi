(()=>{var e={695:(e,r,t)=>{const o=t(901),s=t(272),a=t(666),n=t(404);r.getAllOrders=async(e,r)=>{try{const{userId:t}=e.headers,{action:a}=e.params,n=await o.findById(t);if("superAdmin"===n.role||"admin"===n.role){if("all"===a){const e=await s.find();return r.json(e)}if("true"===a||"false"===a){const e=await s.find({isChecked:a});return r.json(e)}}}catch(e){return r.json(e)}},r.GetOrder=async(e,r)=>{try{const{id:t}=e.params,o=await s.find({user:t}).populate("user");return r.json(o)}catch(e){return r.json(e)}},r.byToken=async(e,r)=>{try{const{userId:t}=e.headers,o=await s.find({user:t}).populate("user");return r.json(o)}catch(e){return r.json(e)}},r.AddOrder=async(e,r)=>{try{const{userId:t}=e.headers,d=await o.findById(t),c=await a.find({user:t});if(d){const e=new s({user:t,orders:[]});for(product of c){const r=await n.findById(product.id);e.orders.push(r)}return await e.save(),r.json("New order added")}}catch(e){return r.json(e)}},r.checkOrder=async(e,r)=>{try{const{userId:t}=e.headers,{orderId:a}=e.params;if("admin"===(await o.findById(t)).role){const e=await s.findById(a);return e.isChecked=!0,await e.save(),r.json("Order successfully checked")}return r.json("only admins can check order")}catch(e){return r.json(e)}}},215:(e,r,t)=>{const o=t(666),s=t(404);r.getBasked=async(e,r)=>{try{const{userId:t}=e.headers,{lang:s}=e.params,a=await o.find({user:t});return a?r.json(a.map((e=>({id:e._id,productTitle:e["productTitle"+s.charAt(0).toUpperCase()+s.slice(1)],productDesc:e["productDesc"+s.charAt(0).toUpperCase()+s.slice(1)],productImg:e.productImg,views:e.views,newPrice:e.newPrice,price:e.productPrice,offer:e.offer,category:{id:e._id,categoryTitle:e["categoryName"+s.charAt(0).toUpperCase()+s.slice(1)]}})))):r.json("user not found")}catch(e){return r.json(e)}},r.addBasked=async(e,r)=>{try{const{userId:t}=e.headers,a=await o.find({user:t});if(!a)return r.json("user not found");const n=await s.findById(e.params.productId);return a.basked.push(n),await a.save(),r.json(a)}catch(e){return r.json(e)}}},668:(e,r,t)=>{const o=t(608),s=t(901);r.GetAll=async(e,r)=>{try{const{lang:t}=e.params,s=(await o.find()).map((e=>({id:e._id,categoryTitle:e["categoryName"+t.charAt(0).toUpperCase()+t.slice(1)]})));r.json(s)}catch(e){return r.json(e)}},r.CreateCategory=async(e,r)=>{try{const{userId:t}=e.headers;if("admin"===(await s.findById(t)).role){const t=new o({categoryNameUz:e.body.categoryNameUz,categoryNameEn:e.body.categoryNameEn,categoryNameKr:e.body.categoryNameKr,categoryNameRu:e.body.categoryNameRu});return await t.save(),r.json("Category added")}return r.json("only admins can add category")}catch(e){return r.json(e)}},r.UpdateCategory=async(e,r)=>{try{const{userId:t}=e.headers,{id:a}=e.params;if("admin"===(await s.findById(t)).role){const t=await o.findById(a);return t.categoryNameUz=e.body.categoryNameUz,t.categoryNameEn=e.body.categoryNameEn,t.categoryNameKr=e.body.categoryNameKr,t.categoryNameRu=e.body.categoryNameRu,await t.save(),r.json("Category updated")}return r.json("only admins can update category")}catch(e){return r.json(e)}},r.DeleteCategory=async(e,r)=>{try{const{userId:t}=e.headers,{id:a}=e.params;return"admin"===(await s.findById(t)).role?(await o.deleteOne({_id:a}),r.json("Category deleted")):r.json("only admins can update category")}catch(e){return r.json(e)}}},225:(e,r,t)=>{const o=t(313),{sign:s}=t(751);r.getAll=async(e,r)=>{try{const e=await o.find();return r.json(e)}catch(e){return r.json(e)}},r.Create=async(e,r)=>{try{const{name:t,password:a,role:n}=e.body,d=s("developer");console.log(typeof d);const c=new o({token:d,name:t,password:a,role:n});return await c.save(),r.json(c)}catch(e){return r.json(e)}},r.Login=async(e,r)=>{try{const{name:t,password:s}=e.body;if(t==process.env.NAME&&s==process.env.PASSWORD)return r.cookie("userRole","NovaAdmin"),r.redirect("nova");const a=await o.findOne({name:t,password:s});return a?(r.cookie("userRole",a.role),r.redirect("user")):r.json("user not found")}catch(e){return r.json(e)}},r.deleteDev=async(e,r)=>{try{return await o.deleteOne({_id:e.params.id}),r.json("Deleted")}catch(e){return r.json(e)}}},586:(e,r,t)=>{const o=t(171),s=t(404);r.getFavorites=async(e,r)=>{try{const{userId:t}=e.headers,{lang:s}=e.params,a=await o.find({user:t});return a?r.json(a.map((e=>({id:e._id,productTitle:e["productTitle"+s.charAt(0).toUpperCase()+s.slice(1)],productDesc:e["productDesc"+s.charAt(0).toUpperCase()+s.slice(1)],productImg:e.productImg,views:e.views,newPrice:e.newPrice,price:e.productPrice,offer:e.offer,category:{id:e._id,categoryTitle:e["categoryName"+s.charAt(0).toUpperCase()+s.slice(1)]}})))):r.json("user not found")}catch(e){return r.json(e)}},r.addFavorites=async(e,r)=>{try{const{userId:t}=e.headers,a=await o.find({user:t});if(!a)return r.json("user not found");const n=await s.findById(e.params.productId);return a.basked.push(n),await a.save(),r.json(a)}catch(e){return r.json(e)}}},495:(e,r,t)=>{const o=t(738),{v4:s}=t(828),a=t(901),n=t(404),d=o.diskStorage({destination(e,r,t){t(null,"uploads/")},filename(e,r,t){t(null,`${s()}:${r.originalname}`)}});r.upload=o({storage:d}),r.GetProducts=async(e,r)=>{try{const{lang:t}=e.params,o=(await n.find().populate("category")).map((e=>({id:e._id,productTitle:e["productTitle"+t.charAt(0).toUpperCase()+t.slice(1)],productDesc:e["productDesc"+t.charAt(0).toUpperCase()+t.slice(1)],productImg:e.productImg,views:e.views,newPrice:e.newPrice,price:e.productPrice,offer:e.offer,category:{id:e._id,categoryTitle:e["categoryName"+t.charAt(0).toUpperCase()+t.slice(1)]}})));r.json(o)}catch(e){return r.json(e)}},r.ById=async(e,r)=>{try{const{lang:t,id:o}=e.params,s=await n.findById(o).populate("category");if(s){s.views+=1,s.save();const e={id:s._id,productTitle:s["productTitle"+t.charAt(0).toUpperCase()+t.slice(1)],productDesc:s["productTitle"+t.charAt(0).toUpperCase()+t.slice(1)],productImg:s.productImg,views:s.views,newPrice:s.newPrice,price:s.productPrice,offer:s.offer,category:{id:s._id,categoryTitle:s["categoryName"+t.charAt(0).toUpperCase()+t.slice(1)]}};return r.json(e)}return r.json("Product not found")}catch(e){return r.json(e)}},r.ByCategory=async(e,r)=>{try{const{lang:t,id:o}=e.params,s=(await n.find({category:o}).populate("category")).map((e=>({id:e._id,productTitle:e["productTitle"+t.charAt(0).toUpperCase()+t.slice(1)],productDesc:e["productDesc"+t.charAt(0).toUpperCase()+t.slice(1)],productImg:e.productImg,views:e.views,newPrice:e.newPrice,price:e.productPrice,offer:e.offer,category:{id:e._id,categoryTitle:e["categoryName"+t.charAt(0).toUpperCase()+t.slice(1)]}})));return r.json(s)}catch(e){return r.json(e)}},r.searchProduct=async(e,r)=>{try{const{lang:t,title:o}=e.params,s=new RegExp(o,"i"),a=(await n.find({productTitle:{$regex:s}}).populate("category")).map((e=>({id:e._id,productTitle:e["productTitle"+t.charAt(0).toUpperCase()+t.slice(1)],productDesc:e["productDesc"+t.charAt(0).toUpperCase()+t.slice(1)],productImg:e.productImg,views:e.views,newPrice:e.newPrice,price:e.productPrice,offer:e.offer,category:{id:e._id,categoryTitle:e["categoryName"+t.charAt(0).toUpperCase()+t.slice(1)]}})));return r.json(a)}catch(e){return r.json(e)}},r.addProduct=async(e,r)=>{try{const{userId:t}=e.headers;if("admin"===(await a.findById(t)).role){const t=new n({productTitleUz:e.body.productTitleUz,productDescUz:e.body.productDescUz,productTitleRu:e.body.productTitleRu,productDescRu:e.body.productDescRu,productTitleEn:e.body.productTitleEn,productDescEn:e.body.productDescEn,productTitleKr:e.body.productTitleKr,productDescKr:e.body.productDescKr,category:e.body.category});void 0!==!e.body.price&&(t.productPrice=e.body.productPrice);for(let r=0;r<e.files.length;r+=1)t.productImg.push(process.env.URL+e.files[r].filename);return await t.save(),r.json(t)}r.json("Only admin can add product.")}catch(e){return r.send(e)}},r.updateProduct=async(e,r)=>{try{const{id:t}=e.params,{userId:o}=e.headers;if("admin"===(await a.findById(o)).role){const o=await n.findById(t);if(o){o.productTitleUz=e.body.productTitleUz,o.productDescUz=e.body.productDescUz,o.productTitleEn=e.body.productTitleEn,o.productDescEn=e.body.productDescEn,o.productTitleRu=e.body.productTitleRu,o.productDescRu=e.body.productDescRu,o.productTitleKr=e.body.productTitleRu,o.productDescKr=e.body.productDescKr,console.log(e.body.productImg),o.productImg=e.body.productImg,o.productPrice=e.body.productPrice,o.category=e.body.category;for(let r=0;r<e.files.length;r+=1)o.productImg.push(process.env.URL+e.files[r].filename);return await o.save(),r.json("Product updated.")}return r.json("Product not found.")}return}catch(e){return r.json(e)}},r.deleteProduct=async(e,r)=>{try{const{userId:t}=e.headers,{id:o}=e.params;return"admin"===(await a.findById(t)).role?(await n.deleteOne({_id:o}),r.json("Product deleted")):r.json("Only admin can delete products.")}catch(e){return r.json(e)}}},810:(e,r,t)=>{const o=t(901),s=t(666),{sign:a}=t(751);r.getAllUsers=async(e,r)=>{try{const{role:t}=e.params;if("all"!==t){const e=await o.find({role:t});return r.json(e)}{const e=await o.find();return r.json(e)}}catch(e){return r.json(e)}},r.SignUp=async(e,r)=>{try{const{name:t,lastName:n,password:d}=e.body;if(t||n||d){const e=new o({name:t,lastName:n,password:d});await e.save();const c=new s({user:e._id});return await c.save(),r.json(a(e._id.toString()))}return r.json("name, lastName and password required")}catch(e){return r.json(e)}},r.LogIn=async(e,r)=>{try{const{name:t,password:s}=e.body;if(t||s){const e=await o.findOne({name:t,password:s});return e?r.json(a(e._id.toString())):r.json("User not found")}return r.json("name and password required")}catch(e){return r.json(e)}},r.addAdmin=async(e,r)=>{try{const{userId:t}=e.headers;if(t&&"superAdmin"===(await o.findById(t)).role){const t=new o({name:e.body.name,lastName:e.body.lastName,password:e.body.password,role:e.body.role});return await t.save(),r.json("new admin added")}}catch(e){return r.json(e)}},r.DeleteAdmin=async(e,r)=>{try{const{userId:t}=e.headers,{id:s}=e.params;if(t)return"superAdmin"===(await o.findById(t)).role?(await o.deleteOne({_id:s}),r.json("Admin deleted")):r.json("Only superAdmins can deleted users.")}catch(e){return r.json(e)}},r.ChangeInformation=async(e,r)=>{try{const t=await o.findById(e.headers.userId);return t.name=e.body.name,t.lastName=e.body.lastName,t.password=e.body.password,await t.save(),r.json(t)}catch(e){return r.json(e)}},r.SpamUser=async(e,r)=>{try{const{userId:t}=e.headers,{id:s}=e.params;if(s){if("superAdmin"===(await o.findById(t)).role){const e=await o.findById(s);return e?(e.spam=!0,await e.save(),r.json("User spam")):r.json("User not found.")}return r.json("Only superAdmin can spam users!")}return r.json("Token is no defined!")}catch(e){return r.json(e)}},r.removeSpam=async(e,r)=>{try{const{userId:t}=e.headers,{id:s}=e.params;if(s){if("superAdmin"===(await o.findById(t)).role){const e=await o.findById(s);return e?(e.spam=!1,await e.save(),r.json("The user has been removed from spam")):r.json("User not found.")}return r.json("Only superAdmin can spam users!")}return r.json("Token is no defined!")}catch(e){return r.json(e)}}},737:(e,r,t)=>{const{verify:o}=t(751);e.exports=function(e,r,t){const s=e.headers.authorization;if(s){const r=s.split(" ")[1];if(r){const s=o(r);s&&(e.headers.userId=s,t())}}else r.status(401).json("Token is not defined")}},598:(e,r,t)=>{const{verify:o}=t(751);e.exports=function(e,r,t){const{dev:s}=e.headers;if("developer"!=o(s))return r.json("Interval sever error");t()}},666:(e,r,t)=>{const o=t(185),s=new o.Schema({user:{type:o.Types.ObjectId,ref:"users"},basked:{type:Array,default:[]}}),a=o.model("basked",s);e.exports=a},608:(e,r,t)=>{const o=t(185),s=new o.Schema({categoryNameUz:{type:String},categoryNameEn:{type:String},categoryNameRu:{type:String},categoryNameKr:{type:String}}),a=o.model("categories",s);e.exports=a},313:(e,r,t)=>{const o=t(185),s=new o.Schema({name:{type:String},password:{type:String},role:{type:String},token:{type:String}}),a=o.model("developers",s);e.exports=a},171:(e,r,t)=>{const o=t(185),s=new o.Schema({user:{type:o.Types.ObjectId,ref:"users"},favorites:{type:Array,default:[]}}),a=o.model("favorites",s);e.exports=a},272:(e,r,t)=>{const o=t(185),s=new o.Schema({user:{type:o.Types.ObjectId,ref:"users"},orders:{type:Array,default:[]},isChecked:{type:Boolean,default:!1}}),a=o.model("orders",s);e.exports=a},404:(e,r,t)=>{const o=t(185),s=new o.Schema({productTitleUz:{type:String},productDescUz:{type:String},productTitleRu:{type:String},productDescRu:{type:String},productTitleEn:{type:String},productDescEn:{type:String},productTitleKr:{type:String},productDescKr:{type:String},productImg:{type:Array,default:[]},productPrice:{type:Number},views:{type:Number,default:0},newPrice:{type:Number,default:0},offer:{type:Boolean,default:!1},category:{type:o.Types.ObjectId,ref:"categories"}}),a=o.model("products",s);e.exports=a},901:(e,r,t)=>{const o=t(185),s=new o.Schema({name:{type:String},lastName:{type:String},password:{type:String},role:{type:String,default:"user"},spam:{type:Boolean,default:!1}}),a=o.model("users",s);e.exports=a},13:(e,r,t)=>{const{Router:o}=t(860),s=t(737),a=t(215),n=o();n.get("/basked/:lang",s,a.getBasked),n.post("/add-basked/:productId",s,a.addBasked),e.exports=n},655:(e,r,t)=>{const{Router:o}=t(860),s=t(668),a=t(737),n=o();n.get("/categories/:lang",s.GetAll),n.post("/add-category",a,s.CreateCategory),n.put("/update-category/:id",a,s.UpdateCategory),n.delete("/delete-category/:id",a,s.DeleteCategory),e.exports=n},240:(e,r,t)=>{const{Router:o}=t(860),s=t(225),a=o();a.get("/developers",s.getAll),a.post("/create-dev",s.Create),a.post("/login-dev",s.Login),a.delete("/delete-dev/:id",s.deleteDev),e.exports=a},847:(e,r,t)=>{const{Router:o}=t(860),s=t(737),a=t(586),n=o();n.get("/favorites/:lang",s,a.getFavorites),n.post("/add-favorites/:productId",s,a.addFavorites),e.exports=n},399:(e,r,t)=>{const{Router:o}=t(860),s=t(737),a=t(695),n=o();n.get("/orders/:action",s,a.getAllOrders),n.get("/order",s,a.byToken),n.get("/order/:id",s,a.GetOrder),n.post("/new-order",s,a.AddOrder),n.put("/check/:orderId",s,a.checkOrder),e.exports=n},768:(e,r,t)=>{const{Router:o}=t(860),s=t(495),a=t(737),n=o();n.get("/products/:lang",s.GetProducts),n.get("/product/:lang/:id",s.ById),n.get("/category/:lang/:id",s.ByCategory),n.get("/search/:lang/:title",s.searchProduct),n.post("/add-product",s.upload.array("images",4),a,s.addProduct),n.put("/update-product/:id",s.upload.array("images",4),a,s.updateProduct),n.delete("/delete-product/:id",a,s.deleteProduct),e.exports=n},194:(e,r,t)=>{const{Router:o}=t(860),s=t(584),a=t(768),n=t(655),d=t(399),c=t(13),i=t(847),u=o();u.use(s),u.use(a),u.use(n),u.use(d),u.use(c),u.use(i),e.exports=u},584:(e,r,t)=>{const{Router:o}=t(860),s=t(810),a=t(737),n=o();n.get("/users/:role",s.getAllUsers),n.post("/sign-up",s.SignUp),n.post("/log-in",s.LogIn),n.post("/add-admin",a,s.addAdmin),n.delete("/delete-admin/:id",a,s.DeleteAdmin),n.put("/change",a,s.ChangeInformation),n.put("/spam/:id",a,s.SpamUser),n.put("/remove-spam/:id",a,s.removeSpam),e.exports=n},122:(e,r,t)=>{const{Router:o}=t(860),s=o();s.get("/",((e,r)=>{const{userRole:t}=e.cookies;t&&r.redirect("user"),r.render("login")})),s.get("/superAdmin",((e,r)=>{const{userRole:t}=e.cookies;"senior"==t&&r.render("superAdmin"),r.redirect("/user")})),s.get("/admin",((e,r)=>{const{userRole:t}=e.cookies;"middle"!=t&&"senior"!=t||r.render("admin"),r.redirect("/user")})),s.get("/user",((e,r)=>{const{userRole:t}=e.cookies;t&&r.render("user"),r.redirect("/")})),e.exports=s},751:(e,r,t)=>{const o=t(344);r.sign=e=>o.sign(e,"1234"),r.verify=e=>o.verify(e,"1234")},986:e=>{"use strict";e.exports=require("body-parser")},710:e=>{"use strict";e.exports=require("cookie-parser")},582:e=>{"use strict";e.exports=require("cors")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},185:e=>{"use strict";e.exports=require("mongoose")},738:e=>{"use strict";e.exports=require("multer")},828:e=>{"use strict";e.exports=require("uuid")},17:e=>{"use strict";e.exports=require("path")}},r={};function t(o){var s=r[o];if(void 0!==s)return s.exports;var a=r[o]={exports:{}};return e[o](a,a.exports,t),a.exports}(()=>{const e=t(142),r=t(860),o=t(185),s=t(582),a=t(194),n=t(710),d=t(986),c=t(122),i=t(240),u=t(598),p=t(17);e.config();const y=r();y.use(r.json()),y.use(n()),o.connect(process.env.MONGO_URL).then((()=>console.log("mongodb connected"))).catch((e=>console.log("db error",e.message))),y.use(d.urlencoded({extended:!0})),y.set("views",p.resolve(process.cwd(),"views")),y.set("view engine","ejs"),y.use(s()),y.use(r.static("uploads")),y.use(r.static("assets")),y.use("/api",u,a),y.use(c),y.use(i),y.listen(process.env.PORT||3001,(()=>console.log("server is run")))})()})();